name: "Release"

on:
  push:
    tags:
      - "**"

jobs:
  release:
    name: "Release"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "7.3"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          ini-values: memory_limit=-1
          tools: composer:v1, cs2pr

      - name: "Get composer cache directory"
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: "Cache dependencies"
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ matrix.dependencies }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ matrix.dependencies }}-composer-

      - name: "Install dependencies"
        run: "composer update --no-interaction --no-progress"

      - name: "Download BOX.phar"
        run: "wget https://github.com/humbug/box/releases/latest/download/box.phar"

      - name: "Validate configuration for humbug/box"
        run: "php box.phar validate"

      - name: "Compile paratest.phar with humbug/box"
        run: "php box.phar compile"

      - name: "Show info about paratest.phar with humbug/box"
        run: "php box.phar info bin/paratest.phar"

      - name: "Determine tag"
        id: "determine-tag"
        run: "echo \"::set-output name=tag::${GITHUB_REF#refs/tags/}\""

      - name: "Create release"
        id: "create-release"
        uses: "actions/create-release@v1"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          draft: false
          prerelease: false
          release_name: "Version ${{ steps.determine-tag.outputs.tag }}"
          tag_name: "${{ steps.determine-tag.outputs.tag }}"

      - name: "Upload paratest.phar"
        if: "always()"
        uses: "actions/upload-release-asset@v1"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          asset_content_type: "text/plain"
          asset_name: "paratest.phar"
          asset_path: "bin/paratest.phar"
          upload_url: "${{ steps.create-release.outputs.upload_url }}"
